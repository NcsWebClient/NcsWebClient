#user  nobody;
worker_processes  1;

error_log  logs/error.log  notice;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$args"' ;
	access_log logs/access_log main;
					  
    sendfile	on;
    tcp_nopush	on;
	tcp_nodelay	on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
	proxy_read_timeout 300;
	#proxy_cookie_path / "/; secure; HttpOnly; SameSite=None";

## DNS server
	resolver 10.x.x.x;

    upstream appstream {
	## IP of appserver
        server 10.x.x.x:8088;
    }		
	
	map $proxy_add_x_forwarded_for $client_ip {"~(?<IP>([0-9]{1,3}\.){3}[0-9]{1,3}),.*" $IP;}
	

server {
		access_log logs/demo_access.log;
		error_log logs/demo_error.log;
        listen       443 ssl;
		# IP of appserver
        set $rpn_nixxis_url             demo.nixxis.com;
		## IP of appserver
        set $rpn_nixxis_ip              10.x.x.x;
        set $rpn_nixxis_port            8088;
        set $rpn_nixxis_scheme          http;
        set $rpn_nixxis_service_length  1398;
		
	    set $rpn_nixxisapi_port     	9090;
		
		
		## FQDN
        set $public_nixxis_url          demo.nixxis.com;
		## Public IP of appserver
        set $public_nixxis_ip           151.x.x.x;
        set $public_nixxis_port         443;
        set $public_nixxis_scheme       https;		
		
		## FQDN
        set $public_nixxisapi_url	demo.nixxis.com;

        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';	

		
        keepalive_timeout    60;
        ssl_session_cache    shared:SSL:10m;
		client_body_timeout 10s;
        ssl_session_timeout  10m;
        server_tokens on;
        chunked_transfer_encoding       off;
        server_name  $public_nixxis_url;
		set $rpn_nixxis_backend $rpn_nixxis_scheme://$rpn_nixxis_url:$rpn_nixxis_port;	
		## If certificate is in folder "c:\nginx\conf\"	
		ssl_certificate      fullchain1.pem;
        ssl_certificate_key  privkey1.pem;

		

		location / {

			if ($query_string = ""){
					return 403;

			}
		
			proxy_http_version 1.1;
			proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
			

			### Set headers ####
			proxy_set_header        Accept-Encoding   "gzip, deflate";
			proxy_set_header        Host $rpn_nixxis_url;
			proxy_set_header        Connection "";
			proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
			# Content-Length has to customized function of hostname
			# Require by service url
			if ($query_string ~ service) {
				   add_header 'Content-Length' $rpn_nixxis_service_length;
			}

			sub_filter_types text/xml;
			# Replace URL for service list
			sub_filter $rpn_nixxis_scheme://$rpn_nixxis_url $public_nixxis_scheme://$public_nixxis_url;
			#sub_filter $rpn_nixxis_scheme://$rpn_nixxis_ip  $public_nixxis_scheme://$public_nixxis_url;

			sub_filter_once off;
			proxy_pass $rpn_nixxis_scheme://$rpn_nixxis_ip:$rpn_nixxis_port;
        }
        

        location ~ ^/agent/(.*) {
			proxy_http_version 1.1;
			proxy_hide_header       Accept-Encoding;
			proxy_set_header        Host $rpn_nixxis_url;
			proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header        X-Forwarded-Proto https;
			proxy_hide_header       Content-Encoding;
			proxy_no_cache 1;
			proxy_pass $rpn_nixxis_scheme://$rpn_nixxis_ip:$rpn_nixxis_port/agent/$1$is_args$query_string;
		}
		
		
		
    }
}
